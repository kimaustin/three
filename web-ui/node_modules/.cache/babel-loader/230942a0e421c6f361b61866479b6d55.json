{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\nimport { get_all_projects, fetch_projects } from './api'; //--------------------------SESSION--------------------------\n\nfunction save_session(sess) {\n  let session = Object.assign({}, sess, {\n    time: Date.now()\n  });\n  localStorage.setItem(\"session\", JSON.stringify(session));\n} //clears the session when a user logs out\n\n\nfunction clear_session() {\n  localStorage.removeItem(\"session\");\n} //user session restore on page refresh (if still exists)\n\n\nfunction restore_session() {\n  let session = localStorage.getItem(\"session\");\n\n  if (!session) {\n    return null;\n  }\n\n  session = JSON.parse(session);\n  let age = Date.now() - session.time;\n  let hour = 3600000; // one hour session expiration (in milliseconds)\n\n  if (age < hour) {\n    return session;\n  } else {\n    return null;\n  }\n} // user session; initial state = current session (if active)\n\n\nfunction session(state = restore_session(), action) {\n  switch (action.type) {\n    case 'session/set':\n      save_session(action.data);\n      return action.data;\n\n    case 'session/clear':\n      clear_session();\n      return null;\n\n    default:\n      return state;\n  }\n} //--------------------------PROJECTS--------------------------\n\n\nfunction projects(state = [], action) {\n  switch (action.type) {\n    case 'projects/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n} // function project_form(state = {}, action) {\n//     switch (action.type) {\n//     case 'project_form/set':\n//         return action.data;\n//     default:\n//         return state\n//     }\n// }\n\n\nfunction root_reducer(state, action) {\n  console.log(\"root_reducer\", state, action);\n  let reducer = combineReducers({\n    projects,\n    session\n  });\n  let state1 = reducer(state, action); // return reducer(state, action);\n\n  return state1;\n}\n\nget_all_projects(); // fetch_projects();\n\nlet preloadedState;\nconst persistedProjectsString = localStorage.getItem('projects');\n\nif (persistedProjectsString) {\n  console.log(\"in persisted\");\n  preloadedState = {\n    projects: JSON.parse(persistedProjectsString)\n  }; // preloadedState = persistedProjectsString;\n  // console.log(\"persisted val: \" + persistedProjectsString);\n}\n\nlet store = createStore(root_reducer, preloadedState);\nexport default store;","map":{"version":3,"sources":["/Users/kimaustin/Documents/Portfolio/new_website/web-ui/src/store.js"],"names":["createStore","combineReducers","get_all_projects","fetch_projects","save_session","sess","session","Object","assign","time","Date","now","localStorage","setItem","JSON","stringify","clear_session","removeItem","restore_session","getItem","parse","age","hour","state","action","type","data","projects","root_reducer","console","log","reducer","state1","preloadedState","persistedProjectsString","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,OAAjD,C,CAEA;;AACA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,MAAIC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,IAAlB,EAAwB;AAACI,IAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAAP,GAAxB,CAAd;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeT,OAAf,CAAhC;AACD,C,CAED;;;AACA,SAASU,aAAT,GAAyB;AACvBJ,EAAAA,YAAY,CAACK,UAAb,CAAwB,SAAxB;AACD,C,CAED;;;AACA,SAASC,eAAT,GAA2B;AACzB,MAAIZ,OAAO,GAAGM,YAAY,CAACO,OAAb,CAAqB,SAArB,CAAd;;AACA,MAAI,CAACb,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AACDA,EAAAA,OAAO,GAAGQ,IAAI,CAACM,KAAL,CAAWd,OAAX,CAAV;AACA,MAAIe,GAAG,GAAGX,IAAI,CAACC,GAAL,KAAaL,OAAO,CAACG,IAA/B;AACA,MAAIa,IAAI,GAAG,OAAX,CAPyB,CAOL;;AACpB,MAAID,GAAG,GAAGC,IAAV,EAAgB;AACd,WAAOhB,OAAP;AACD,GAFD,MAGK;AACH,WAAO,IAAP;AACD;AACF,C,CAED;;;AACA,SAASA,OAAT,CAAiBiB,KAAK,GAAGL,eAAe,EAAxC,EAA4CM,MAA5C,EAAoD;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACErB,MAAAA,YAAY,CAACoB,MAAM,CAACE,IAAR,CAAZ;AACA,aAAOF,MAAM,CAACE,IAAd;;AACF,SAAK,eAAL;AACEV,MAAAA,aAAa;AACb,aAAO,IAAP;;AACF;AACE,aAAOO,KAAP;AARJ;AAUD,C,CAEH;;;AAEA,SAASI,QAAT,CAAkBJ,KAAK,GAAG,EAA1B,EAA8BC,MAA9B,EAAsC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACA,SAAK,cAAL;AACI,aAAOD,MAAM,CAACE,IAAd;;AACJ;AACI,aAAOH,KAAP;AAJJ;AAMH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASK,YAAT,CAAsBL,KAAtB,EAA6BC,MAA7B,EAAqC;AACjCK,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BP,KAA5B,EAAmCC,MAAnC;AACA,MAAIO,OAAO,GAAG9B,eAAe,CAAC;AAC1B0B,IAAAA,QAD0B;AAChBrB,IAAAA;AADgB,GAAD,CAA7B;AAIA,MAAI0B,MAAM,GAAGD,OAAO,CAACR,KAAD,EAAQC,MAAR,CAApB,CANiC,CAQjC;;AACA,SAAOQ,MAAP;AACH;;AAED9B,gBAAgB,G,CAChB;;AAEA,IAAI+B,cAAJ;AACA,MAAMC,uBAAuB,GAAGtB,YAAY,CAACO,OAAb,CAAqB,UAArB,CAAhC;;AAEA,IAAIe,uBAAJ,EAA6B;AAC3BL,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAG,EAAAA,cAAc,GAAG;AACfN,IAAAA,QAAQ,EAAEb,IAAI,CAACM,KAAL,CAAWc,uBAAX;AADK,GAAjB,CAF2B,CAM3B;AACA;AACD;;AAED,IAAIC,KAAK,GAAGnC,WAAW,CAAC4B,YAAD,EAAeK,cAAf,CAAvB;AAEA,eAAeE,KAAf","sourcesContent":["import { createStore, combineReducers } from 'redux';\nimport { get_all_projects, fetch_projects } from './api';\n\n//--------------------------SESSION--------------------------\nfunction save_session(sess) {\n    let session = Object.assign({}, sess, {time: Date.now()});\n    localStorage.setItem(\"session\", JSON.stringify(session));\n  }\n  \n  //clears the session when a user logs out\n  function clear_session() {\n    localStorage.removeItem(\"session\");\n  }\n  \n  //user session restore on page refresh (if still exists)\n  function restore_session() {\n    let session = localStorage.getItem(\"session\");\n    if (!session) {\n      return null;\n    }\n    session = JSON.parse(session);\n    let age = Date.now() - session.time;\n    let hour = 3600000; // one hour session expiration (in milliseconds)\n    if (age < hour) {\n      return session;\n    }\n    else {\n      return null;\n    }\n  }\n  \n  // user session; initial state = current session (if active)\n  function session(state = restore_session(), action) {\n    switch (action.type) {\n      case 'session/set':\n        save_session(action.data);\n        return action.data;\n      case 'session/clear':\n        clear_session();\n        return null;\n      default:\n        return state;\n    }\n  }\n\n//--------------------------PROJECTS--------------------------\n\nfunction projects(state = [], action) {\n    switch (action.type) {\n    case 'projects/set':\n        return action.data;\n    default:\n        return state;\n    }\n}\n\n// function project_form(state = {}, action) {\n//     switch (action.type) {\n//     case 'project_form/set':\n//         return action.data;\n//     default:\n//         return state\n//     }\n// }\n\n\nfunction root_reducer(state, action) {\n    console.log(\"root_reducer\", state, action);\n    let reducer = combineReducers({\n        projects, session\n    });\n\n    let state1 = reducer(state, action);\n\n    // return reducer(state, action);\n    return state1;\n}\n\nget_all_projects();\n// fetch_projects();\n\nlet preloadedState;\nconst persistedProjectsString = localStorage.getItem('projects');\n\nif (persistedProjectsString) {\n  console.log(\"in persisted\");\n  preloadedState = {\n    projects: JSON.parse(persistedProjectsString)\n  }\n\n  // preloadedState = persistedProjectsString;\n  // console.log(\"persisted val: \" + persistedProjectsString);\n}\n\nlet store = createStore(root_reducer, preloadedState);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}