{"ast":null,"code":"var _jsxFileName = \"/Users/kimaustin/Documents/Portfolio/website_v2/web-ui/src/components/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallBack } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const ref = useRef();\n  const [itemsFromServer, setItemsFromServer] = useState(null);\n  useEffect(() => {\n    fetchItemsFromServer().then(items => setItemsFromServer(items));\n  }, []); // Attach the scroll listener to the div, exact same as before.\n\n  useEffect(() => {\n    const div = ref.current;\n    div.addEventListener(\"scroll\", handleScroll);\n  }, [handleScroll]); // If we have no data yet, we render a loading indicator.\n\n  if (!itemsFromServer) {\n    return /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  } // Otherwise we render a scrollable div.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scrollableContainer\",\n    ref: ref,\n    children: itemsFromServer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this); // The scroll listener\n\n  const handleScroll = useCallback(() => {\n    console.log(\"scrolling\");\n  }, []); // Attach the scroll listener to the div\n\n  useEffect(() => {\n    const div = ref.current;\n    div.addEventListener(\"scroll\", handleScroll);\n  }, [handleScroll]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scrollableContainer\",\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: \"When this content is taller than the parent, it scrolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"2WdlYOQ4/U6EDSZU10j204s2olc=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/kimaustin/Documents/Portfolio/website_v2/web-ui/src/components/Home/index.js"],"names":["React","useState","useRef","useEffect","useCallBack","Home","ref","itemsFromServer","setItemsFromServer","fetchItemsFromServer","then","items","div","current","addEventListener","handleScroll","useCallback","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,WAA7C,QAA+D,OAA/D;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAMC,GAAG,GAAGJ,MAAM,EAAlB;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,IAAD,CAAtD;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,oBAAoB,GAAGC,IAAvB,CAA4BC,KAAK,IAAIH,kBAAkB,CAACG,KAAD,CAAvD;AACD,GAFQ,EAEN,EAFM,CAAT,CALiB,CASjB;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,GAAG,GAAGN,GAAG,CAACO,OAAhB;AACAD,IAAAA,GAAG,CAACE,gBAAJ,CAAqB,QAArB,EAA+BC,YAA/B;AACD,GAHQ,EAGN,CAACA,YAAD,CAHM,CAAT,CAViB,CAejB;;AACA,MAAI,CAACR,eAAL,EAAsB;AACpB,wBAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAlBkB,CAoBjB;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,GAAG,EAAED,GAA1C;AAAA,cACGC;AADH;AAAA;AAAA;AAAA;AAAA,UADF,CArBiB,CA0BjB;;AACA,QAAMQ,YAAY,GAAGC,WAAW,CAAC,MAAM;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GAF+B,EAE7B,EAF6B,CAAhC,CA3BiB,CA+BjB;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,GAAG,GAAGN,GAAG,CAACO,OAAhB;AACAD,IAAAA,GAAG,CAACE,gBAAJ,CAAqB,QAArB,EAA+BC,YAA/B;AACD,GAHQ,EAGN,CAACA,YAAD,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,GAAG,EAAET,GAA1C;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA5CD;;GAAMD,I;;KAAAA,I;AA8CN,eAAeA,IAAf","sourcesContent":["import React, { useState, useRef, useEffect, useCallBack} from 'react';\n\nconst Home = () => {\n\n  const ref = useRef();\n  const [itemsFromServer, setItemsFromServer] = useState(null)\n\n  useEffect(() => {\n    fetchItemsFromServer().then(items => setItemsFromServer(items))\n  }, [])\n\n  // Attach the scroll listener to the div, exact same as before.\n  useEffect(() => {\n    const div = ref.current\n    div.addEventListener(\"scroll\", handleScroll)\n  }, [handleScroll])\n\n  // If we have no data yet, we render a loading indicator.\n  if (!itemsFromServer) {\n    return <LoadingIndicator />\n}\n\n  // Otherwise we render a scrollable div.\n  return (\n    <div className=\"scrollableContainer\" ref={ref}>\n      {itemsFromServer}\n    </div>\n)\n  // The scroll listener\n  const handleScroll = useCallback(() => {\n    console.log(\"scrolling\")\n  }, [])\n\n  // Attach the scroll listener to the div\n  useEffect(() => {\n    const div = ref.current\n    div.addEventListener(\"scroll\", handleScroll)\n  }, [handleScroll]);\n\n  return (\n    <div className=\"scrollableContainer\" ref={ref}>\n      <div className=\"content\">\n        When this content is taller than the parent, it scrolls.\n      </div>\n    </div>\n  )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}