{"ast":null,"code":"import _slicedToArray from\"/home/portfolio/website/web-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./App.scss\";import React,{useState}from'react';import{BrowserRouter as Router,Switch,Route,useLocation}from'react-router-dom';import GlobalFonts from'./fonts/fonts';import{motion,AnimatePresence}from\"framer-motion\";import Home from\"./components/Home\";import Main from\"./components/Main\";import Navigation from\"./components/Navigation\";import Status from\"./components/Status\";import MobileBar from\"./components/MobileBar\";import{Button2}from\"./components/ButtonElement\";import DarkModeButton from\"./components/DarkModeButton\";import Works from\"./components/Works\";import WorkExpanded from\"./components/Works/WorkExpanded\";import Images from\"./components/ImageZoom\";import About from\"./components/About\";import Topbar from\"./components/Topbar\";import Lab from\"./components/Lab\";import Close from\"./components/About\";import MobileToggle from\"./components/MobileToggle\";import WIP from\"./components/WIP\";import{Provider}from\"react-redux\";//Our App Components\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var toggle=function toggle(){setIsOpen(!isOpen);};var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),aboutToggle=_useState4[0],setAboutToggle=_useState4[1];var toggleAbout=function toggleAbout(currPage){console.log(\"about toggled\");if(currPage=='info'){setAboutToggle(!aboutToggle);}else{setAboutToggle(false);}};// const location = useLocation();\n//TODO: make 2 Styled Component Themes, declare state that is one Theme.\n//----- ON dark/mode press, change state to other theme. Pass in state to each component.\nvar pageTransition={type:\"tween\",ease:[0.7,0.1,0.4,1],duration:0.5};return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(GlobalFonts,{}),/*#__PURE__*/_jsx(Navigation,{}),/*#__PURE__*/_jsx(Route,{render:function render(_ref){var location=_ref.location;return/*#__PURE__*/_jsx(AnimatePresence,{exitBeforeEnter:true,initial:false,children:/*#__PURE__*/_jsxs(Switch,{location:location,children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:Main}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/works\",component:Works}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/info\",component:About}),/*#__PURE__*/_jsx(Route,{path:\"/:workId?/works\",component:WorkExpanded,exact:true}),/*#__PURE__*/_jsx(Route,{path:\"/:workId?/images\",component:Images})]},location.pathname)});}}),/*#__PURE__*/_jsx(Status,{})]});}export default App;","map":{"version":3,"sources":["/home/portfolio/website/web-ui/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","useLocation","GlobalFonts","motion","AnimatePresence","Home","Main","Navigation","Status","MobileBar","Button2","DarkModeButton","Works","WorkExpanded","Images","About","Topbar","Lab","Close","MobileToggle","WIP","Provider","App","isOpen","setIsOpen","toggle","aboutToggle","setAboutToggle","toggleAbout","currPage","console","log","pageTransition","type","ease","duration","location","pathname"],"mappings":"iHAAA,MAAO,YAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,CAAiDC,WAAjD,KAAoE,kBAApE,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,MAAT,CAAiBC,eAAjB,KAAwC,eAAxC,CAEA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,6BAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,iCAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,CACA,OAASC,QAAT,KAAyB,aAAzB,CAEA;wFACA,QAASC,CAAAA,GAAT,EAAe,CAGb,cAA4B1B,QAAQ,CAAC,IAAD,CAApC,wCAAO2B,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBD,SAAS,CAAC,CAACD,MAAF,CAAT,CACD,CAFD,CAIA,eAAsC3B,QAAQ,CAAC,KAAD,CAA9C,yCAAO8B,WAAP,eAAoBC,cAApB,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,CAAc,CAChCC,OAAO,CAACC,GAAR,CAAY,eAAZ,EACA,GAAGF,QAAQ,EAAI,MAAf,CAAuB,CACrBF,cAAc,CAAC,CAACD,WAAF,CAAd,CACD,CAFD,IAEO,CACLC,cAAc,CAAC,KAAD,CAAd,CACD,CACF,CAPD,CASA;AACA;AACA;AAEA,GAAMK,CAAAA,cAAc,CAAG,CACrBC,IAAI,CAAE,OADe,CAErBC,IAAI,CAAE,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB,CAAhB,CAFe,CAGrBC,QAAQ,CAAE,GAHW,CAAvB,CAMA,mBACE,MAAC,MAAD,yBACE,KAAC,WAAD,IADF,cAGE,KAAC,UAAD,IAHF,cAIE,KAAC,KAAD,EACE,MAAM,CAAE,yBAAGC,CAAAA,QAAH,MAAGA,QAAH,oBACN,KAAC,eAAD,EAAiB,eAAe,KAAhC,CAAiC,OAAO,CAAE,KAA1C,uBACE,MAAC,MAAD,EAAQ,QAAQ,CAAEA,QAAlB,wBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAE9B,IAAjC,EADF,cAEE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,CAA2B,SAAS,CAAEM,KAAtC,EAFF,cAGE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,OAAlB,CAA0B,SAAS,CAAEG,KAArC,EAHF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,iBAAZ,CAA8B,SAAS,CAAEF,YAAzC,CAAuD,KAAK,KAA5D,EAJF,cAKE,KAAC,KAAD,EAAO,IAAI,CAAC,kBAAZ,CAA+B,SAAS,CAAEC,MAA1C,EALF,GAAiCsB,QAAQ,CAACC,QAA1C,CADF,EADM,EADV,EAJF,cAiBE,KAAC,MAAD,IAjBF,GADF,CAsBD,CAED,cAAef,CAAAA,GAAf","sourcesContent":["import \"./App.scss\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, useLocation } from 'react-router-dom';\nimport GlobalFonts from './fonts/fonts';\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport Home from \"./components/Home\";\nimport Main from \"./components/Main\";\nimport Navigation from \"./components/Navigation\";\nimport Status from \"./components/Status\";\nimport MobileBar from \"./components/MobileBar\";\nimport { Button2 } from \"./components/ButtonElement\";\nimport DarkModeButton from \"./components/DarkModeButton\";\nimport Works from \"./components/Works\";\nimport WorkExpanded from \"./components/Works/WorkExpanded\";\nimport Images from \"./components/ImageZoom\";\nimport About from \"./components/About\";\nimport Topbar from \"./components/Topbar\";\nimport Lab from \"./components/Lab\";\nimport Close from \"./components/About\";\nimport MobileToggle from \"./components/MobileToggle\";\nimport WIP from \"./components/WIP\";\nimport { Provider } from \"react-redux\";\n\n//Our App Components\nfunction App() {\n\n  \n  const [isOpen, setIsOpen] = useState(true);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const [aboutToggle, setAboutToggle] = useState(false);\n  \n  const toggleAbout = (currPage) => {\n    console.log(\"about toggled\");\n    if(currPage == 'info') {\n      setAboutToggle(!aboutToggle);\n    } else {\n      setAboutToggle(false);\n    }\n  }\n\n  // const location = useLocation();\n  //TODO: make 2 Styled Component Themes, declare state that is one Theme.\n  //----- ON dark/mode press, change state to other theme. Pass in state to each component.\n\n  const pageTransition = {\n    type: \"tween\",\n    ease: [0.7, 0.1, 0.4, 1],\n    duration: 0.5\n  };\n\n  return (\n    <Router>\n      <GlobalFonts />\n      {/* <Navigation toggle={toggleAbout} aboutToggle={aboutToggle}/> */}\n      <Navigation />\n      <Route\n        render={({ location }) => (\n          <AnimatePresence exitBeforeEnter initial={false}>\n            <Switch location={location} key={location.pathname}>\n              <Route exact path=\"/\" component={Main} />\n              <Route exact path=\"/works\" component={Works} />\n              <Route exact path=\"/info\" component={About} />\n              <Route path=\"/:workId?/works\" component={WorkExpanded} exact />\n              <Route path=\"/:workId?/images\" component={Images} />\n            </Switch>\n          </AnimatePresence>\n        )}\n      />\n      <Status />\n      {/* <WIP /> */}\n    </Router>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}