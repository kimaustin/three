{"ast":null,"code":"var _jsxFileName = \"/home/portfolio/v2/web-ui/src/components/Navbar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { FaBars } from 'react-icons/fa';\nimport { IconContext } from 'react-icons/lib';\nimport { Container, Nav, NavbarContainer, NavLogo, MobileIcon, NavMenu, NavItem, NavLinksDOM, NavLinks, NavBtn, NavBtnLink } from './NavbarElements';\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = ({\n  mobileToggle,\n  isOpen\n}) => {\n  _s();\n\n  const [scrollNav, setScrollNav] = useState(false); //TODO triggers something when certain scroll level has been reached\n\n  const changeNav = () => {\n    if (window.scrollY >= 80) {\n      setScrollNav(true);\n    } else {\n      setScrollNav(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', changeNav);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    showInfo: isOpen,\n    as: motion.div,\n    initial: {\n      x: '-100vw',\n      y: '0'\n    },\n    animate: isOpen ? {\n      x: '0',\n      y: 0\n    } : {\n      x: '-100vw',\n      y: '0'\n    },\n    transition: {\n      type: \"tween\",\n      ease: [0.28, 1.35, 1.5, .91],\n      duration: 0.6\n    },\n    children: [/*#__PURE__*/_jsxDEV(NavbarContainer, {\n      children: /*#__PURE__*/_jsxDEV(NavMenu, {\n        children: [/*#__PURE__*/_jsxDEV(NavLinksDOM, {\n          to: \"/main\",\n          children: \"Landing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(NavLinksDOM, {\n          to: \"/main\",\n          children: \"Landing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(NavLinksDOM, {\n          to: \"/main\",\n          children: \"Landing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(NavLinksDOM, {\n          to: \"/main\",\n          children: \"Landing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MobileIcon, {\n      onClick: mobileToggle,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"eaUcF+T16QTGbajlwzqOoSnbGek=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/home/portfolio/v2/web-ui/src/components/Navbar/index.js"],"names":["React","useState","useEffect","FaBars","IconContext","Container","Nav","NavbarContainer","NavLogo","MobileIcon","NavMenu","NavItem","NavLinksDOM","NavLinks","NavBtn","NavBtnLink","motion","Navbar","mobileToggle","isOpen","scrollNav","setScrollNav","changeNav","window","scrollY","addEventListener","div","x","y","type","ease","duration"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,eAAzB,EAA0CC,OAA1C,EAAmDC,UAAnD,EAA+DC,OAA/D,EAAwEC,OAAxE,EAAiFC,WAAjF,EAA8FC,QAA9F,EAAwGC,MAAxG,EAAgHC,UAAhH,QAAkI,kBAAlI;AACA,SAASC,MAAT,QAAuB,eAAvB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAA4B;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,KAAD,CAA1C,CADuC,CAGvC;;AACA,QAAMqB,SAAS,GAAG,MAAM;AACpB,QAAGC,MAAM,CAACC,OAAP,IAAkB,EAArB,EAAyB;AACrBH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KAFD,MAEO;AACHA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAND;;AAQAnB,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,SAAlC;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAEH,MAArB;AACI,IAAA,EAAE,EAAEH,MAAM,CAACU,GADf;AACoB,IAAA,OAAO,EAAE;AAAEC,MAAAA,CAAC,EAAE,QAAL;AAAeC,MAAAA,CAAC,EAAE;AAAlB,KAD7B;AAEI,IAAA,OAAO,EAAET,MAAM,GAAG;AAAGQ,MAAAA,CAAC,EAAE,GAAN;AAAWC,MAAAA,CAAC,EAAE;AAAd,KAAH,GAAuB;AAAED,MAAAA,CAAC,EAAE,QAAL;AAAeC,MAAAA,CAAC,EAAE;AAAlB,KAF1C;AAGI,IAAA,UAAU,EAAE;AACZC,MAAAA,IAAI,EAAE,OADM;AAEZC,MAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,EAAkB,GAAlB,CAFM;AAGZC,MAAAA,QAAQ,EAAE;AAHE,KAHhB;AAAA,4BAUI,QAAC,eAAD;AAAA,6BAEI,QAAC,OAAD;AAAA,gCACQ,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAEQ,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,eAGQ,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHR,eAIQ,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAVJ,eAoBI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEb,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAzCD;;GAAMD,M;;KAAAA,M;AA2CN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FaBars } from 'react-icons/fa';\nimport { IconContext } from 'react-icons/lib';\nimport { Container, Nav, NavbarContainer, NavLogo, MobileIcon, NavMenu, NavItem, NavLinksDOM, NavLinks, NavBtn, NavBtnLink } from './NavbarElements';\nimport { motion } from \"framer-motion\";\n\nconst Navbar = ({mobileToggle, isOpen}) => {\n    const [scrollNav, setScrollNav] = useState(false);\n    \n    //TODO triggers something when certain scroll level has been reached\n    const changeNav = () => {\n        if(window.scrollY >= 80) {\n            setScrollNav(true);\n        } else {\n            setScrollNav(false);\n        }\n    };\n \n    useEffect(() => {\n        window.addEventListener('scroll', changeNav)\n    }, []);\n\n    return (\n        <Container showInfo={isOpen}\n            as={motion.div} initial={{ x: '-100vw', y: '0' }} \n            animate={isOpen ? {  x: '0', y: 0 } : { x: '-100vw', y: '0' }}\n            transition={{\n            type: \"tween\",\n            ease: [0.28, 1.35, 1.5, .91],\n            duration: 0.6\n            }}\n        >\n            {/* <Nav scrollNav={scrollNav}> */}\n            <NavbarContainer>\n                {/* <NavLogo to=\"/\">N</NavLogo> */}\n                <NavMenu>\n                        <NavLinksDOM to=\"/main\">Landing</NavLinksDOM>\n                        <NavLinksDOM to=\"/main\">Landing</NavLinksDOM>\n                        <NavLinksDOM to=\"/main\">Landing</NavLinksDOM>\n                        <NavLinksDOM to=\"/main\">Landing</NavLinksDOM>\n                </NavMenu>\n            </NavbarContainer>\n            \n            <MobileIcon onClick={mobileToggle}>Close</MobileIcon>\n            {/* </Nav> */}\n        </Container>\n    );\n};\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}