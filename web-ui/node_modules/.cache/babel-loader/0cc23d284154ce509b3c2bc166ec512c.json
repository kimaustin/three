{"ast":null,"code":"var _jsxFileName = \"/home/portfolio/v2/web-ui/src/components/SideProjects/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useInView, inView, InView } from 'react-intersection-observer';\nimport { connect } from \"react-redux\";\nimport { motion } from \"framer-motion\";\nimport { Link as LinkRouter } from 'react-router-dom';\nimport { Container, ImageContainer, WorkListContainer, Marker, ClickableArea, WorkItem, CaseStudy, WorkActions, WorkName, TagsContainer, ProjectTag, Details, VisitLink } from './SideProjectsElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SideProjects = ({\n  projects,\n  sideProjectsToggle\n}) => {\n  _s();\n\n  const [projectValue, setProjectValue] = useState(0);\n  const ListContainerRef = useRef();\n  let observerOptions = {\n    root: ListContainerRef.target,\n    rootMargin: '0px -48% 0px -48%' // threshold: 0.1\n\n  };\n  const myRefs = [];\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef()); // useEffect (() => {\n  //     for (var i = 0; i < myRefs.length; i++) { \n  //         const observer = new IntersectionObserver((projectsList) => {\n  //           if (projectsList[0].isIntersecting) {\n  //             setProjectValue(projectsList[0].target.id);\n  //             projectsList[0].target.style.opacity = 1.0;\n  //           } else {\n  //             projectsList[0].target.style.opacity = 0.5;\n  //           }\n  //         }, observerOptions)\n  //         observer.observe(myRefs[i].current);\n  //     }\n  // }, [])\n\n  const pageVariants3 = {\n    initial: {\n      opacity: 0,\n      x: \"-100vw\",\n      scale: 0.8\n    },\n    in: {\n      opacity: 1,\n      // y: '4.5rem',\n      x: 0,\n      scale: 1\n    },\n    outOther: {\n      opacity: 0,\n      x: \"-100vw\",\n      scale: 1,\n      transition: {\n        delay: 0,\n        type: \"tween\",\n        ease: [0.7, 0, 0.13, 1],\n        duration: 0.85\n      }\n    },\n    outSelected: {\n      opacity: 0,\n      position: 'aboslute',\n      top: 0,\n      scale: 1,\n      transition: {\n        delay: 0.2,\n        type: \"tween\",\n        ease: [0.7, 0, 0.13, 1],\n        duration: 0.7\n      }\n    }\n  };\n\n  const handleClick = index => {\n    var _myRefs$index$current;\n\n    // console.log('proj clicked', index);\n    // console.log('clicked - current proj index', projectValue);\n    (_myRefs$index$current = myRefs[index].current) === null || _myRefs$index$current === void 0 ? void 0 : _myRefs$index$current.scrollIntoView({\n      behavior: 'smooth'\n    }); // await timeout(1000); //for 1 sec delay\n    // setProjectValue(index);\n  };\n\n  let imgPreviews = projects.map((project, index) => {\n    return /*#__PURE__*/_jsxDEV(ImageContainer, {\n      to: '/' + index + '/works',\n      as: motion.div,\n      initial: \"initial\",\n      animate: \"in\",\n      exit: \"outOther\",\n      variants: pageVariants3,\n      transition: {\n        type: \"tween\",\n        ease: [0.7, 0, 0.13, 1],\n        duration: 0.8,\n        delay: index * 0.16\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: 'imgs/' + project.imgs[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }); //MAIN PROJECTS LIST\n\n  let projects_list = projects.map((project, index) => {\n    // var refName = 'ref' + {project};\n    // const { ref: refName, inView: inView2, entry } = useInView({\n    //   rootMargin: '-210px'\n    // });\n    if (project.isCS) {\n      return /*#__PURE__*/_jsxDEV(WorkItem, {\n        id: index,\n        ref: myRefs[index],\n        onClick: () => handleClick(index),\n        currProj: projectValue,\n        thisProj: index,\n        children: [project.name, /*#__PURE__*/_jsxDEV(CaseStudy, {\n          children: \"CASE STUDY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(WorkItem, {\n        id: index,\n        ref: myRefs[index],\n        onClick: () => handleClick(index),\n        currProj: projectValue,\n        thisProj: index,\n        children: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this) // <InView>\n      //   {({ inView, ref, entry }) => (\n      //     <WorkItem ref={refName} id={\"testID\" + project}>\n      //       {project.name}\n      //       <ImageHover heightVar={\"1\" + project.val + \"%\"}>\n      //         <img src={\"testProjCover\" + project.val + \".png\"} />\n      //       </ImageHover>  \n      //     </WorkItem>\n      //   )}\n      // </InView>\n      ;\n    }\n  }); // function ProjTags({ tag, key, index }) {\n  //   if (index < 5) {\n  //     return <ProjectTag>{tag} <br/></ProjectTag>;\n  //   }\n  // }\n  // let tagsDisplayed = projects[projectValue].tags.map((tag, index) => (\n  //   <ProjTags\n  //     tag={tag}\n  //     key={tag.id}\n  //     index={index}\n  //   />\n  // ));\n  // let visit_link = () => {\n  //   if (projects[projectValue].link.length == 1) {\n  //     return (\n  //       <VisitLink href={projects[projectValue].link[0]} target=\"_blank\">\n  //         Visit â†—\n  //       </VisitLink>\n  //     )\n  //   } else {\n  //     return;\n  //   }\n  // }\n  // let rightImageSource = \"imgs/\" + projects[projectValue].imgs[0];\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: imgPreviews\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SideProjects, \"EOISHGgpsetsyHIBITIaVwVguMQ=\");\n\n_c = SideProjects;\nexport default connect(({\n  projects,\n  sideProjectsToggle\n}) => ({\n  projects,\n  sideProjectsToggle\n}))(SideProjects);\n\nvar _c;\n\n$RefreshReg$(_c, \"SideProjects\");","map":{"version":3,"sources":["/home/portfolio/v2/web-ui/src/components/SideProjects/index.js"],"names":["React","useState","useEffect","useRef","useCallback","useInView","inView","InView","connect","motion","Link","LinkRouter","Container","ImageContainer","WorkListContainer","Marker","ClickableArea","WorkItem","CaseStudy","WorkActions","WorkName","TagsContainer","ProjectTag","Details","VisitLink","SideProjects","projects","sideProjectsToggle","projectValue","setProjectValue","ListContainerRef","observerOptions","root","target","rootMargin","myRefs","push","pageVariants3","initial","opacity","x","scale","in","outOther","transition","delay","type","ease","duration","outSelected","position","top","handleClick","index","current","scrollIntoView","behavior","imgPreviews","map","project","div","imgs","projects_list","isCS","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,QAA0C,6BAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,SACEC,SADF,EAEEC,cAFF,EAGEC,iBAHF,EAIEC,MAJF,EAKEC,aALF,EAMEC,QANF,EAOEC,SAPF,EAQEC,WARF,EASEC,QATF,EAUEC,aAVF,EAWEC,UAXF,EAYEC,OAZF,EAaEC,SAbF,QAcO,wBAdP;;;AAgBA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAsC;AAAA;;AAEzD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC5B,QAAQ,CAAC,CAAD,CAAhD;AAEA,QAAM6B,gBAAgB,GAAG3B,MAAM,EAA/B;AAEA,MAAI4B,eAAe,GAAG;AACpBC,IAAAA,IAAI,EAAEF,gBAAgB,CAACG,MADH;AAEpBC,IAAAA,UAAU,EAAE,mBAFQ,CAGpB;;AAHoB,GAAtB;AAMA,QAAMC,MAAM,GAAG,EAAf;AACAA,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB;AACAgC,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB;AACAgC,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB;AACAgC,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB;AACAgC,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB;AACAgC,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB;AACAgC,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB;AACAgC,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB;AACAgC,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB;AACAgC,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB;AACAgC,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB;AACAgC,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB;AACAgC,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB;AACAgC,EAAAA,MAAM,CAACC,IAAP,CAAYjC,MAAM,EAAlB,EA1ByD,CA4BzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMkC,aAAa,GAAG;AACpBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,CADF;AAEPC,MAAAA,CAAC,EAAE,QAFI;AAGPC,MAAAA,KAAK,EAAE;AAHA,KADW;AAMpBC,IAAAA,EAAE,EAAE;AACFH,MAAAA,OAAO,EAAE,CADP;AAEF;AACAC,MAAAA,CAAC,EAAE,CAHD;AAIFC,MAAAA,KAAK,EAAE;AAJL,KANgB;AAYpBE,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,OAAO,EAAE,CADD;AAERC,MAAAA,CAAC,EAAE,QAFK;AAGRC,MAAAA,KAAK,EAAE,CAHC;AAIRG,MAAAA,UAAU,EAAE;AAACC,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE,OAAjB;AACVC,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,IAAT,EAAe,CAAf,CADI;AAEVC,QAAAA,QAAQ,EAAE;AAFA;AAJJ,KAZU;AAoBpBC,IAAAA,WAAW,EAAE;AACXV,MAAAA,OAAO,EAAE,CADE;AAEXW,MAAAA,QAAQ,EAAE,UAFC;AAGXC,MAAAA,GAAG,EAAE,CAHM;AAIXV,MAAAA,KAAK,EAAE,CAJI;AAKXG,MAAAA,UAAU,EAAE;AAACC,QAAAA,KAAK,EAAE,GAAR;AAAaC,QAAAA,IAAI,EAAE,OAAnB;AACVC,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,IAAT,EAAe,CAAf,CADI;AAEVC,QAAAA,QAAQ,EAAE;AAFA;AALD;AApBO,GAAtB;;AA+BA,QAAMI,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B;AACA;AACA,6BAAAlB,MAAM,CAACkB,KAAD,CAAN,CAAcC,OAAd,gFAAuBC,cAAvB,CAAsC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAtC,EAH6B,CAI7B;AACA;AACD,GAND;;AAQA,MAAIC,WAAW,GAAG/B,QAAQ,CAACgC,GAAT,CAAa,CAACC,OAAD,EAAUN,KAAV,KAAoB;AACjD,wBACE,QAAC,cAAD;AAAgB,MAAA,EAAE,EAAE,MAAMA,KAAN,GAAc,QAAlC;AACE,MAAA,EAAE,EAAE5C,MAAM,CAACmD,GADb;AAEE,MAAA,OAAO,EAAC,SAFV;AAGE,MAAA,OAAO,EAAC,IAHV;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,QAAQ,EAAEvB,aALZ;AAME,MAAA,UAAU,EAAE;AACVS,QAAAA,IAAI,EAAE,OADI;AAEVC,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,IAAT,EAAe,CAAf,CAFI;AAGVC,QAAAA,QAAQ,EAAE,GAHA;AAIVH,QAAAA,KAAK,EAAEQ,KAAK,GAAG;AAJL,OANd;AAAA,6BAaE;AAAK,QAAA,GAAG,EAAE,UAAUM,OAAO,CAACE,IAAR,CAAa,CAAb;AAApB;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAlBiB,CAAlB,CAjFyD,CAsGzD;;AACA,MAAIC,aAAa,GAAGpC,QAAQ,CAACgC,GAAT,CAAa,CAACC,OAAD,EAAUN,KAAV,KAAoB;AAEnD;AACA;AACA;AACA;AAEA,QAAIM,OAAO,CAACI,IAAZ,EAAkB;AAChB,0BACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEV,KAAd;AAAqB,QAAA,GAAG,EAAElB,MAAM,CAACkB,KAAD,CAAhC;AAAyC,QAAA,OAAO,EAAE,MAAKD,WAAW,CAACC,KAAD,CAAlE;AAA2E,QAAA,QAAQ,EAAEzB,YAArF;AAAmG,QAAA,QAAQ,EAAEyB,KAA7G;AAAA,mBACGM,OAAO,CAACK,IADX,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARD,MAQO;AACL,0BACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEX,KAAd;AAAqB,QAAA,GAAG,EAAElB,MAAM,CAACkB,KAAD,CAAhC;AAAyC,QAAA,OAAO,EAAE,MAAKD,WAAW,CAACC,KAAD,CAAlE;AAA2E,QAAA,QAAQ,EAAEzB,YAArF;AAAmG,QAAA,QAAQ,EAAEyB,KAA7G;AAAA,kBACGM,OAAO,CAACK;AADX;AAAA;AAAA;AAAA;AAAA,cADF,CAKE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdF;AAgBD;AACF,GAjCmB,CAApB,CAvGyD,CA0IzD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,sBACE,QAAC,SAAD;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5KD;;GAAMhC,Y;;KAAAA,Y;AA8KN,eAAejB,OAAO,CAAC,CAAC;AAAEkB,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,MAAuC;AAAED,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAvC,CAAD,CAAP,CAAkFF,YAAlF,CAAf","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useInView, inView, InView } from 'react-intersection-observer';\nimport { connect } from \"react-redux\";\nimport { motion } from \"framer-motion\";\nimport { Link as LinkRouter } from 'react-router-dom';\nimport {\n  Container,\n  ImageContainer,\n  WorkListContainer,\n  Marker,\n  ClickableArea,\n  WorkItem,\n  CaseStudy,\n  WorkActions,\n  WorkName,\n  TagsContainer,\n  ProjectTag,\n  Details,\n  VisitLink\n} from './SideProjectsElements';\n\nconst SideProjects = ({ projects, sideProjectsToggle }) => {\n\n  const [projectValue, setProjectValue] = useState(0);\n\n  const ListContainerRef = useRef();\n\n  let observerOptions = {\n    root: ListContainerRef.target,\n    rootMargin: '0px -48% 0px -48%',\n    // threshold: 0.1\n  }\n\n  const myRefs = [];\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n\n  // useEffect (() => {\n  //     for (var i = 0; i < myRefs.length; i++) { \n  //         const observer = new IntersectionObserver((projectsList) => {\n  //           if (projectsList[0].isIntersecting) {\n  //             setProjectValue(projectsList[0].target.id);\n  //             projectsList[0].target.style.opacity = 1.0;\n  //           } else {\n  //             projectsList[0].target.style.opacity = 0.5;\n  //           }\n  //         }, observerOptions)\n  //         observer.observe(myRefs[i].current);\n  //     }\n  // }, [])\n\n  const pageVariants3 = {\n    initial: {\n      opacity: 0,\n      x: \"-100vw\",\n      scale: 0.8,\n    },\n    in: {\n      opacity: 1,\n      // y: '4.5rem',\n      x: 0,\n      scale: 1,\n    },\n    outOther: {\n      opacity: 0,\n      x: \"-100vw\",\n      scale: 1,\n      transition: {delay: 0, type: \"tween\",\n        ease: [0.7, 0, 0.13, 1],\n        duration: 0.85},\n    },\n    outSelected: {\n      opacity: 0,\n      position: 'aboslute',\n      top: 0,\n      scale: 1,\n      transition: {delay: 0.2, type: \"tween\",\n        ease: [0.7, 0, 0.13, 1],\n        duration: 0.7},\n    },\n  };\n  \n  const handleClick = (index) => {\n    // console.log('proj clicked', index);\n    // console.log('clicked - current proj index', projectValue);\n    myRefs[index].current?.scrollIntoView({ behavior: 'smooth' });\n    // await timeout(1000); //for 1 sec delay\n    // setProjectValue(index);\n  }\n\n  let imgPreviews = projects.map((project, index) => {\n    return (\n      <ImageContainer to={'/' + index + '/works'}\n        as={motion.div}\n        initial=\"initial\"\n        animate=\"in\"\n        exit=\"outOther\"\n        variants={pageVariants3}\n        transition={{\n          type: \"tween\",\n          ease: [0.7, 0, 0.13, 1],\n          duration: 0.8,\n          delay: index * 0.16,\n        }}\n      >\n        <img src={'imgs/' + project.imgs[0]}></img>\n      </ImageContainer>\n    )\n  })\n\n\n  //MAIN PROJECTS LIST\n  let projects_list = projects.map((project, index) => {\n\n    // var refName = 'ref' + {project};\n    // const { ref: refName, inView: inView2, entry } = useInView({\n    //   rootMargin: '-210px'\n    // });\n\n    if (project.isCS) {\n      return (\n        <WorkItem id={index} ref={myRefs[index]} onClick={()=> handleClick(index)} currProj={projectValue} thisProj={index}>\n          {project.name}\n          {/* <Fake>{projectValue}</Fake> */}\n          <CaseStudy>CASE STUDY</CaseStudy>\n        </WorkItem>\n      )\n    } else {\n      return (\n        <WorkItem id={index} ref={myRefs[index]} onClick={()=> handleClick(index)} currProj={projectValue} thisProj={index}>\n          {project.name}\n          {/* <Fake>{projectValue}</Fake> */}\n        </WorkItem>\n        // <InView>\n        //   {({ inView, ref, entry }) => (\n        //     <WorkItem ref={refName} id={\"testID\" + project}>\n        //       {project.name}\n        //       <ImageHover heightVar={\"1\" + project.val + \"%\"}>\n        //         <img src={\"testProjCover\" + project.val + \".png\"} />\n        //       </ImageHover>  \n        //     </WorkItem>\n        //   )}\n        // </InView>\n      )\n    }\n  });\n\n  // function ProjTags({ tag, key, index }) {\n  //   if (index < 5) {\n  //     return <ProjectTag>{tag} <br/></ProjectTag>;\n  //   }\n  // }\n\n  // let tagsDisplayed = projects[projectValue].tags.map((tag, index) => (\n  //   <ProjTags\n  //     tag={tag}\n  //     key={tag.id}\n  //     index={index}\n  //   />\n  // ));\n\n  // let visit_link = () => {\n  //   if (projects[projectValue].link.length == 1) {\n  //     return (\n  //       <VisitLink href={projects[projectValue].link[0]} target=\"_blank\">\n  //         Visit â†—\n  //       </VisitLink>\n  //     )\n  //   } else {\n  //     return;\n  //   }\n  // }\n\n  // let rightImageSource = \"imgs/\" + projects[projectValue].imgs[0];\n\n\n  return (\n    <Container>\n      {imgPreviews}\n    </Container>\n  )\n}\n\nexport default connect(({ projects, sideProjectsToggle }) => ({ projects, sideProjectsToggle }))(SideProjects);\n\n"]},"metadata":{},"sourceType":"module"}