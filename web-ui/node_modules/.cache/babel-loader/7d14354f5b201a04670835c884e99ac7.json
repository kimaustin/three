{"ast":null,"code":"var _jsxFileName = \"/Users/kimaustin/Documents/Portfolio/new_website/web-ui/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.scss\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, useLocation } from 'react-router-dom';\nimport GlobalFonts from './fonts/fonts';\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { ThemeProvider } from 'styled-components';\nimport Home from \"./components/Home\";\nimport Main from \"./components/Main\";\nimport Navigation from \"./components/Navigation\";\nimport Status from \"./components/Status\";\nimport MobileBar from \"./components/MobileBar\";\nimport { Button2 } from \"./components/ButtonElement\";\nimport DarkModeButton from \"./components/DarkModeButton\";\nimport Works from \"./components/Works\";\nimport WorkExpanded from \"./components/Works/WorkExpanded\";\nimport Images from \"./components/ImageZoom\";\nimport About from \"./components/About\";\nimport AboutPanel from \"./components/AboutPanel\";\nimport NavBar from \"./components/Navbar\";\nimport Topbar from \"./components/Topbar\";\nimport Lab from \"./components/Lab\";\nimport Close from \"./components/About\";\nimport MobileToggle from \"./components/MobileToggle\";\nimport WIP from \"./components/WIP\";\nimport { Provider } from \"react-redux\";\nimport SideProjects from \"./components/SideProjects\";\nimport Blog from \"./components/Blog\";\nimport CloseOverlay from \"./components/CloseOverlay\";\nimport ThemeToggle from \"./components/ThemeToggle\"; //Our App Components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    console.log(\"mobile nav toggled\", isOpen);\n    setIsOpen(!isOpen);\n  };\n\n  const [aboutToggle, setAboutToggle] = useState(false);\n\n  const toggleAbout = currPage => {\n    if (currPage == 'info') {\n      console.log(\"about toggled\");\n      setAboutToggle(!aboutToggle);\n    } else {\n      setAboutToggle(false);\n    }\n  }; // const toggleAbout = () => {\n  //   console.log(\"about toggled\");\n  //   setAboutToggle(!setAboutToggle);\n  // };\n\n\n  const [sideProjectsToggle, setSideProjectsToggle] = useState(false); // const location = useLocation();\n  //TODO: make 2 Styled Component Themes, declare state that is one Theme.\n  //----- ON dark/mode press, change state to other theme. Pass in state to each component.\n\n  const lightTheme = {\n    bg: \"rgba(245, 251, 255, 1)\",\n    bgBlur: \"rgba(220, 212, 230, 0.6)\",\n    bgSide: \"rgba(238, 241, 242, 0.9)\",\n    bgNav: \"rgba(245, 251, 255, 0.65)\",\n    bgPreview: \"rgba(255, 255, 255, 0.7)\",\n    primary: \"#000000\",\n    secondary: \"#777777\",\n    cs: \"#0047FD\",\n    border: \"#E3E3E3\"\n  };\n  const darkTheme = {\n    bg: \"black\",\n    bgBlur: \"rgba(100, 100, 100, 0.35)\",\n    bgSide: \"rgba(51, 49, 52, 0.8)\",\n    bgNav: \"rgba(30, 30, 31, 0.65)\",\n    bgPreview: \"rgba(8, 8, 8, 0.85)\",\n    primary: \"#FFFFFF\",\n    secondary: \"#BABABA\",\n    border: \"#403F3F\",\n    cs: \"#5685FF\"\n  };\n  const [colorTheme, setColorTheme] = useState(lightTheme);\n\n  const toggleTheme = () => {\n    // console.log(\"mobile nav toggled\", isOpen);\n    if (colorTheme == lightTheme) {\n      setColorTheme(darkTheme);\n    } else if (colorTheme == darkTheme) {\n      setColorTheme(lightTheme);\n    }\n  };\n\n  const pageTransition = {\n    type: \"tween\",\n    ease: [0.7, 0.1, 0.4, 1],\n    duration: 0.5\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: colorTheme,\n      children: [/*#__PURE__*/_jsxDEV(GlobalFonts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n        mobileToggle: toggle,\n        isOpen: isOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        toggle: toggleAbout,\n        aboutToggle: aboutToggle,\n        mobileToggle: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AboutPanel, {\n        aboutToggle: aboutToggle,\n        toggle: toggleAbout,\n        children: /*#__PURE__*/_jsxDEV(Close, {\n          onClick: toggleAbout,\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SideProjects, {\n        sideProjectsToggle: sideProjectsToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloseOverlay, {\n        isOpen: isOpen,\n        aboutToggle: aboutToggle,\n        toggleAbout: toggleAbout,\n        mobileToggle: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemeToggle, {\n        themeToggle: toggleTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), \"// TODO:\", /*#__PURE__*/_jsxDEV(Route, {\n        render: ({\n          location\n        }) => /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          exitBeforeEnter: true,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            location: location,\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              component: Main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/works\",\n              component: Works\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/:workId?/works\",\n              component: WorkExpanded,\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/:workId?/images\",\n              component: Images\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, location.pathname, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NXH02A+e+r+jEXcZBKLp5rMDCok=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kimaustin/Documents/Portfolio/new_website/web-ui/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","useLocation","GlobalFonts","motion","AnimatePresence","ThemeProvider","Home","Main","Navigation","Status","MobileBar","Button2","DarkModeButton","Works","WorkExpanded","Images","About","AboutPanel","NavBar","Topbar","Lab","Close","MobileToggle","WIP","Provider","SideProjects","Blog","CloseOverlay","ThemeToggle","App","isOpen","setIsOpen","toggle","console","log","aboutToggle","setAboutToggle","toggleAbout","currPage","sideProjectsToggle","setSideProjectsToggle","lightTheme","bg","bgBlur","bgSide","bgNav","bgPreview","primary","secondary","cs","border","darkTheme","colorTheme","setColorTheme","toggleTheme","pageTransition","type","ease","duration","location","pathname"],"mappings":"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","sourcesContent":["import \"./App.scss\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, useLocation } from 'react-router-dom';\nimport GlobalFonts from './fonts/fonts';\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { ThemeProvider } from 'styled-components';\n\nimport Home from \"./components/Home\";\nimport Main from \"./components/Main\";\nimport Navigation from \"./components/Navigation\";\nimport Status from \"./components/Status\";\nimport MobileBar from \"./components/MobileBar\";\nimport { Button2 } from \"./components/ButtonElement\";\nimport DarkModeButton from \"./components/DarkModeButton\";\nimport Works from \"./components/Works\";\nimport WorkExpanded from \"./components/Works/WorkExpanded\";\nimport Images from \"./components/ImageZoom\";\nimport About from \"./components/About\";\nimport AboutPanel from \"./components/AboutPanel\";\nimport NavBar from \"./components/Navbar\";\nimport Topbar from \"./components/Topbar\";\nimport Lab from \"./components/Lab\";\nimport Close from \"./components/About\";\nimport MobileToggle from \"./components/MobileToggle\";\nimport WIP from \"./components/WIP\";\nimport { Provider } from \"react-redux\";\nimport SideProjects from \"./components/SideProjects\";\nimport Blog from \"./components/Blog\";\nimport CloseOverlay from \"./components/CloseOverlay\";\nimport ThemeToggle from \"./components/ThemeToggle\";\n\n//Our App Components\nfunction App() {\n  \n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    console.log(\"mobile nav toggled\", isOpen);\n    setIsOpen(!isOpen);\n  };\n\n  const [aboutToggle, setAboutToggle] = useState(false);\n  \n  const toggleAbout = (currPage) => {\n    if (currPage == 'info') {\n      console.log(\"about toggled\");\n      setAboutToggle(!aboutToggle);\n    } else {\n      setAboutToggle(false);\n    }\n  }\n\n  // const toggleAbout = () => {\n  //   console.log(\"about toggled\");\n  //   setAboutToggle(!setAboutToggle);\n  // };\n\n  const [sideProjectsToggle, setSideProjectsToggle] = useState(false);\n\n  // const location = useLocation();\n  //TODO: make 2 Styled Component Themes, declare state that is one Theme.\n  //----- ON dark/mode press, change state to other theme. Pass in state to each component.\n\n  const lightTheme = {\n    bg: \"rgba(245, 251, 255, 1)\",\n    bgBlur: \"rgba(220, 212, 230, 0.6)\",\n    bgSide: \"rgba(238, 241, 242, 0.9)\",\n    bgNav: \"rgba(245, 251, 255, 0.65)\",\n    bgPreview: \"rgba(255, 255, 255, 0.7)\",\n    primary: \"#000000\",\n    secondary: \"#777777\",\n    cs: \"#0047FD\",\n    border: \"#E3E3E3\"\n  };\n\n  const darkTheme = {\n    bg: \"black\",\n    bgBlur: \"rgba(100, 100, 100, 0.35)\",\n    bgSide: \"rgba(51, 49, 52, 0.8)\",\n    bgNav: \"rgba(30, 30, 31, 0.65)\",\n    bgPreview: \"rgba(8, 8, 8, 0.85)\",\n    primary: \"#FFFFFF\",\n    secondary: \"#BABABA\",\n    border: \"#403F3F\",\n    cs: \"#5685FF\",\n  }\n\n  const [colorTheme, setColorTheme] = useState(lightTheme);\n\n  const toggleTheme = () => {\n    // console.log(\"mobile nav toggled\", isOpen);\n    if (colorTheme == lightTheme) {\n      setColorTheme(darkTheme);\n    } else if (colorTheme == darkTheme) {\n      setColorTheme(lightTheme);\n    }\n  };\n\n\n  const pageTransition = {\n    type: \"tween\",\n    ease: [0.7, 0.1, 0.4, 1],\n    duration: 0.5\n  };\n\n  return (\n    <Router>\n      <ThemeProvider theme={colorTheme}>\n        <GlobalFonts />\n        <NavBar mobileToggle={toggle} isOpen={isOpen}/>\n        <Navigation toggle={toggleAbout} aboutToggle={aboutToggle} mobileToggle={toggle}/>\n        <AboutPanel aboutToggle={aboutToggle} toggle={toggleAbout}><Close onClick={toggleAbout}>close</Close></AboutPanel>\n        <SideProjects sideProjectsToggle={sideProjectsToggle} />\n        <CloseOverlay isOpen={isOpen} aboutToggle={aboutToggle} toggleAbout={toggleAbout} mobileToggle={toggle}/>\n        <ThemeToggle themeToggle={toggleTheme}/>\n        // TODO: \n        <Route\n          render={({ location }) => (\n            <AnimatePresence exitBeforeEnter>\n              <Switch location={location} key={location.pathname}>\n                <Route exact path=\"/\" component={Main} />\n                <Route exact path=\"/works\" component={Works} />\n                {/* <Route exact path=\"/works\" render={(props) => <Works theme={colorTheme} {...props} />}/> */}\n                {/* <Route exact path=\"/test\" component={Home} /> */}\n                {/* <Route exact path=\"/blog\" component={Blog} />  */}\n                {/* <Route exact path=\"/info\" component={About} /> */}\n                <Route path=\"/:workId?/works\" component={WorkExpanded} exact />\n                <Route path=\"/:workId?/images\" component={Images} />\n              </Switch>\n            </AnimatePresence>\n          )}\n        />\n        {/* <Status /> */}\n        {/* <WIP /> */}\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}