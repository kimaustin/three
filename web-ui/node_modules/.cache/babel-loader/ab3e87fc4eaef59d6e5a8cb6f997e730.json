{"ast":null,"code":"import _slicedToArray from\"/home/portfolio/v2/web-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef,useCallback}from'react';import{useInView,inView,InView}from'react-intersection-observer';import{connect}from\"react-redux\";import{motion}from\"framer-motion\";import{Link as LinkRouter}from'react-router-dom';import{Container,ImageContainer,WorkListContainer,Marker,ClickableArea,WorkItem,CaseStudy,WorkActions,WorkName,TagsContainer,ProjectTag,Details,VisitLink}from'./SideProjectsElements';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SideProjects=function SideProjects(_ref){var projects=_ref.projects,sideProjectsToggle=_ref.sideProjectsToggle;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),projectValue=_useState2[0],setProjectValue=_useState2[1];var ListContainerRef=useRef();var observerOptions={root:ListContainerRef.target,rootMargin:'-49% 0px -50% 0px'// threshold: 0.1\n};var myRefs=[];myRefs.push(useRef());myRefs.push(useRef());myRefs.push(useRef());myRefs.push(useRef());myRefs.push(useRef());myRefs.push(useRef());myRefs.push(useRef());myRefs.push(useRef());myRefs.push(useRef());myRefs.push(useRef());myRefs.push(useRef());myRefs.push(useRef());myRefs.push(useRef());myRefs.push(useRef());// useEffect (() => {\n//     for (var i = 0; i < myRefs.length; i++) { \n//         const observer = new IntersectionObserver((projectsList) => {\n//           if (projectsList[0].isIntersecting) {\n//             setProjectValue(projectsList[0].target.id);\n//             projectsList[0].target.style.opacity = 1.0;\n//           } else {\n//             projectsList[0].target.style.opacity = 0.5;\n//           }\n//         }, observerOptions)\n//         observer.observe(myRefs[i].current);\n//     }\n// }, [])\nvar handleClick=function handleClick(index){var _myRefs$index$current;// console.log('proj clicked', index);\n// console.log('clicked - current proj index', projectValue);\n(_myRefs$index$current=myRefs[index].current)===null||_myRefs$index$current===void 0?void 0:_myRefs$index$current.scrollIntoView({behavior:'smooth'});// await timeout(1000); //for 1 sec delay\n// setProjectValue(index);\n};var imgPreviews=projects.map(function(project,index){return/*#__PURE__*/_jsx(ImageContainer,{to:'/'+index+'/works',children:/*#__PURE__*/_jsx(\"img\",{src:'imgs/'+project.imgs[0]})});});//MAIN PROJECTS LIST\nvar projects_list=projects.map(function(project,index){// var refName = 'ref' + {project};\n// const { ref: refName, inView: inView2, entry } = useInView({\n//   rootMargin: '-210px'\n// });\nif(project.isCS){return/*#__PURE__*/_jsxs(WorkItem,{id:index,ref:myRefs[index],onClick:function onClick(){return handleClick(index);},currProj:projectValue,thisProj:index,children:[project.name,/*#__PURE__*/_jsx(CaseStudy,{children:\"CASE STUDY\"})]});}else{return/*#__PURE__*/_jsx(WorkItem,{id:index,ref:myRefs[index],onClick:function onClick(){return handleClick(index);},currProj:projectValue,thisProj:index,children:project.name})// <InView>\n//   {({ inView, ref, entry }) => (\n//     <WorkItem ref={refName} id={\"testID\" + project}>\n//       {project.name}\n//       <ImageHover heightVar={\"1\" + project.val + \"%\"}>\n//         <img src={\"testProjCover\" + project.val + \".png\"} />\n//       </ImageHover>  \n//     </WorkItem>\n//   )}\n// </InView>\n;}});// function ProjTags({ tag, key, index }) {\n//   if (index < 5) {\n//     return <ProjectTag>{tag} <br/></ProjectTag>;\n//   }\n// }\n// let tagsDisplayed = projects[projectValue].tags.map((tag, index) => (\n//   <ProjTags\n//     tag={tag}\n//     key={tag.id}\n//     index={index}\n//   />\n// ));\n// let visit_link = () => {\n//   if (projects[projectValue].link.length == 1) {\n//     return (\n//       <VisitLink href={projects[projectValue].link[0]} target=\"_blank\">\n//         Visit â†—\n//       </VisitLink>\n//     )\n//   } else {\n//     return;\n//   }\n// }\n// let rightImageSource = \"imgs/\" + projects[projectValue].imgs[0];\nreturn/*#__PURE__*/_jsx(Container,{children:imgPreviews});};export default connect(function(_ref2){var projects=_ref2.projects,sideProjectsToggle=_ref2.sideProjectsToggle;return{projects:projects,sideProjectsToggle:sideProjectsToggle};})(SideProjects);","map":{"version":3,"sources":["/home/portfolio/v2/web-ui/src/components/SideProjects/index.js"],"names":["React","useState","useEffect","useRef","useCallback","useInView","inView","InView","connect","motion","Link","LinkRouter","Container","ImageContainer","WorkListContainer","Marker","ClickableArea","WorkItem","CaseStudy","WorkActions","WorkName","TagsContainer","ProjectTag","Details","VisitLink","SideProjects","projects","sideProjectsToggle","projectValue","setProjectValue","ListContainerRef","observerOptions","root","target","rootMargin","myRefs","push","handleClick","index","current","scrollIntoView","behavior","imgPreviews","map","project","imgs","projects_list","isCS","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useInView, inView, InView } from 'react-intersection-observer';\nimport { connect } from \"react-redux\";\nimport { motion } from \"framer-motion\";\nimport { Link as LinkRouter } from 'react-router-dom';\nimport {\n  Container,\n  ImageContainer,\n  WorkListContainer,\n  Marker,\n  ClickableArea,\n  WorkItem,\n  CaseStudy,\n  WorkActions,\n  WorkName,\n  TagsContainer,\n  ProjectTag,\n  Details,\n  VisitLink\n} from './SideProjectsElements';\n\nconst SideProjects = ({ projects, sideProjectsToggle }) => {\n\n  const [projectValue, setProjectValue] = useState(0);\n\n\n  const ListContainerRef = useRef();\n\n  let observerOptions = {\n    root: ListContainerRef.target,\n    rootMargin: '-49% 0px -50% 0px',\n    // threshold: 0.1\n  }\n\n  const myRefs = [];\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n  myRefs.push(useRef());\n\n  // useEffect (() => {\n  //     for (var i = 0; i < myRefs.length; i++) { \n  //         const observer = new IntersectionObserver((projectsList) => {\n  //           if (projectsList[0].isIntersecting) {\n  //             setProjectValue(projectsList[0].target.id);\n  //             projectsList[0].target.style.opacity = 1.0;\n  //           } else {\n  //             projectsList[0].target.style.opacity = 0.5;\n  //           }\n  //         }, observerOptions)\n  //         observer.observe(myRefs[i].current);\n  //     }\n  // }, [])\n\n  const handleClick = (index) => {\n    // console.log('proj clicked', index);\n    // console.log('clicked - current proj index', projectValue);\n    myRefs[index].current?.scrollIntoView({ behavior: 'smooth' });\n    // await timeout(1000); //for 1 sec delay\n    // setProjectValue(index);\n  }\n\n  let imgPreviews = projects.map((project, index) => {\n    return (\n      <ImageContainer to={'/' + index + '/works'}>\n        <img src={'imgs/' + project.imgs[0]}></img>\n      </ImageContainer>\n    )\n  })\n\n\n  //MAIN PROJECTS LIST\n  let projects_list = projects.map((project, index) => {\n\n    // var refName = 'ref' + {project};\n    // const { ref: refName, inView: inView2, entry } = useInView({\n    //   rootMargin: '-210px'\n    // });\n\n    if (project.isCS) {\n      return (\n        <WorkItem id={index} ref={myRefs[index]} onClick={()=> handleClick(index)} currProj={projectValue} thisProj={index}>\n          {project.name}\n          {/* <Fake>{projectValue}</Fake> */}\n          <CaseStudy>CASE STUDY</CaseStudy>\n        </WorkItem>\n      )\n    } else {\n      return (\n        <WorkItem id={index} ref={myRefs[index]} onClick={()=> handleClick(index)} currProj={projectValue} thisProj={index}>\n          {project.name}\n          {/* <Fake>{projectValue}</Fake> */}\n        </WorkItem>\n        // <InView>\n        //   {({ inView, ref, entry }) => (\n        //     <WorkItem ref={refName} id={\"testID\" + project}>\n        //       {project.name}\n        //       <ImageHover heightVar={\"1\" + project.val + \"%\"}>\n        //         <img src={\"testProjCover\" + project.val + \".png\"} />\n        //       </ImageHover>  \n        //     </WorkItem>\n        //   )}\n        // </InView>\n      )\n    }\n  });\n\n  // function ProjTags({ tag, key, index }) {\n  //   if (index < 5) {\n  //     return <ProjectTag>{tag} <br/></ProjectTag>;\n  //   }\n  // }\n\n  // let tagsDisplayed = projects[projectValue].tags.map((tag, index) => (\n  //   <ProjTags\n  //     tag={tag}\n  //     key={tag.id}\n  //     index={index}\n  //   />\n  // ));\n\n  // let visit_link = () => {\n  //   if (projects[projectValue].link.length == 1) {\n  //     return (\n  //       <VisitLink href={projects[projectValue].link[0]} target=\"_blank\">\n  //         Visit â†—\n  //       </VisitLink>\n  //     )\n  //   } else {\n  //     return;\n  //   }\n  // }\n\n  // let rightImageSource = \"imgs/\" + projects[projectValue].imgs[0];\n\n\n  return (\n    <Container>\n      {imgPreviews}\n    </Container>\n  )\n}\n\nexport default connect(({ projects, sideProjectsToggle }) => ({ projects, sideProjectsToggle }))(SideProjects);\n\n"]},"metadata":{},"sourceType":"module"}