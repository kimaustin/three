{"ast":null,"code":"import _slicedToArray from\"/home/portfolio/website/web-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{FaBars}from'react-icons/fa';import{IconContext}from'react-icons/lib';import{Nav,NavbarContainer,NavLogo,MobileIcon,NavMenu,NavItem,NavLinksDOM,NavLinks,NavBtn,NavBtnLink}from'./NavbarElements';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Navbar=function Navbar(_ref){var toggle=_ref.toggle;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),scrollNav=_useState2[0],setScrollNav=_useState2[1];//TODO triggers something when certain scroll level has been reached\nvar changeNav=function changeNav(){if(window.scrollY>=80){setScrollNav(true);}else{setScrollNav(false);}};useEffect(function(){window.addEventListener('scroll',changeNav);},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(IconContext.Provider,{value:{color:'#fff '},children:/*#__PURE__*/_jsx(Nav,{scrollNav:scrollNav,children:/*#__PURE__*/_jsxs(NavbarContainer,{children:[/*#__PURE__*/_jsx(NavLogo,{to:\"/\",children:\"N\"}),/*#__PURE__*/_jsx(MobileIcon,{onClick:toggle,children:/*#__PURE__*/_jsx(FaBars,{})}),/*#__PURE__*/_jsxs(NavMenu,{children:[/*#__PURE__*/_jsx(NavItem,{children:/*#__PURE__*/_jsx(NavLinksDOM,{to:\"/main\",children:\"Landing\"})}),/*#__PURE__*/_jsx(NavItem,{children:/*#__PURE__*/_jsx(NavLinks,{to:\"about\",children:\"About\"})}),/*#__PURE__*/_jsx(NavItem,{children:/*#__PURE__*/_jsx(NavLinks,{to:\"work\",children:\"Work\"})}),/*#__PURE__*/_jsx(NavItem,{children:/*#__PURE__*/_jsx(NavLinks,{to:\"nektine\",children:\"Nektine\"})}),/*#__PURE__*/_jsx(NavBtn,{children:/*#__PURE__*/_jsx(NavBtnLink,{to:\"/signIn\",children:\"Sign In\"})})]})]})})})});};export default Navbar;","map":{"version":3,"sources":["/home/portfolio/website/web-ui/src/components/Navbar/index.js"],"names":["React","useState","useEffect","FaBars","IconContext","Nav","NavbarContainer","NavLogo","MobileIcon","NavMenu","NavItem","NavLinksDOM","NavLinks","NavBtn","NavBtnLink","Navbar","toggle","scrollNav","setScrollNav","changeNav","window","scrollY","addEventListener","color"],"mappings":"iHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,gBAAvB,CACA,OAASC,WAAT,KAA4B,iBAA5B,CACA,OAASC,GAAT,CAAcC,eAAd,CAA+BC,OAA/B,CAAwCC,UAAxC,CAAoDC,OAApD,CAA6DC,OAA7D,CAAsEC,WAAtE,CAAmFC,QAAnF,CAA6FC,MAA7F,CAAqGC,UAArG,KAAuH,kBAAvH,C,6IAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAc,IAAZC,CAAAA,MAAY,MAAZA,MAAY,CACzB,cAAkCf,QAAQ,CAAC,KAAD,CAA1C,wCAAOgB,SAAP,eAAkBC,YAAlB,eAEA;AACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB,GAAGC,MAAM,CAACC,OAAP,EAAkB,EAArB,CAAyB,CACrBH,YAAY,CAAC,IAAD,CAAZ,CACH,CAFD,IAEO,CACHA,YAAY,CAAC,KAAD,CAAZ,CACH,CACJ,CAND,CAQAhB,SAAS,CAAC,UAAM,CACZkB,MAAM,CAACE,gBAAP,CAAwB,QAAxB,CAAkCH,SAAlC,EACH,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACI,sCACI,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAEI,KAAK,CAAE,OAAT,CAA7B,uBACI,KAAC,GAAD,EAAK,SAAS,CAAEN,SAAhB,uBACI,MAAC,eAAD,yBACI,KAAC,OAAD,EAAS,EAAE,CAAC,GAAZ,eADJ,cAEI,KAAC,UAAD,EAAY,OAAO,CAAED,MAArB,uBACI,KAAC,MAAD,IADJ,EAFJ,cAKI,MAAC,OAAD,yBACI,KAAC,OAAD,wBACI,KAAC,WAAD,EAAa,EAAE,CAAC,OAAhB,qBADJ,EADJ,cAII,KAAC,OAAD,wBACI,KAAC,QAAD,EAAU,EAAE,CAAC,OAAb,mBADJ,EAJJ,cAOI,KAAC,OAAD,wBACI,KAAC,QAAD,EAAU,EAAE,CAAC,MAAb,kBADJ,EAPJ,cAUI,KAAC,OAAD,wBACI,KAAC,QAAD,EAAU,EAAE,CAAC,SAAb,qBADJ,EAVJ,cAaI,KAAC,MAAD,wBACI,KAAC,UAAD,EAAY,EAAE,CAAC,SAAf,qBADJ,EAbJ,GALJ,GADJ,EADJ,EADJ,EADJ,CA+BH,CA/CD,CAiDA,cAAeD,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FaBars } from 'react-icons/fa';\nimport { IconContext } from 'react-icons/lib';\nimport { Nav, NavbarContainer, NavLogo, MobileIcon, NavMenu, NavItem, NavLinksDOM, NavLinks, NavBtn, NavBtnLink } from './NavbarElements';\n\nconst Navbar = ({toggle}) => {\n    const [scrollNav, setScrollNav] = useState(false);\n    \n    //TODO triggers something when certain scroll level has been reached\n    const changeNav = () => {\n        if(window.scrollY >= 80) {\n            setScrollNav(true);\n        } else {\n            setScrollNav(false);\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener('scroll', changeNav)\n    }, []);\n\n    return (\n        <>\n            <IconContext.Provider value={{ color: '#fff '}}>\n                <Nav scrollNav={scrollNav}>\n                    <NavbarContainer>\n                        <NavLogo to=\"/\">N</NavLogo>\n                        <MobileIcon onClick={toggle}>\n                            <FaBars />\n                        </MobileIcon>\n                        <NavMenu>\n                            <NavItem>\n                                <NavLinksDOM to=\"/main\">Landing</NavLinksDOM>\n                            </NavItem>\n                            <NavItem>\n                                <NavLinks to=\"about\">About</NavLinks>\n                            </NavItem>\n                            <NavItem>\n                                <NavLinks to=\"work\">Work</NavLinks>\n                            </NavItem>\n                            <NavItem>\n                                <NavLinks to=\"nektine\">Nektine</NavLinks>\n                            </NavItem>\n                            <NavBtn>\n                                <NavBtnLink to='/signIn'>Sign In</NavBtnLink>\n                            </NavBtn>\n                        </NavMenu>\n                    </NavbarContainer>\n                </Nav>\n            </IconContext.Provider>\n        </>\n    );\n};\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}